pick c844395 reference new oz packages
pick 9dff109 remove unused import
pick 87c8494 attempt to fix tests
pick 3fd3fdb attempt to fix tests #2
pick 93f4fe2 add scope to documentation
pick 2b68dcf weird hack to build base-client because of nx order bug?
pick 1e8fb15 add build-deps for all packages
pick 91720fd Revert "weird hack to build base-client because of nx order bug?"
pick aa354c1 Revert "add build-deps for all packages"
pick 0561a91 Update all changes to fix tests
pick 8707e6f Revert "Update all changes to fix tests"
pick 7df9f73 remove outdated files
pick d5bef9f add scope to mocks to fix tests
fixup 4c5e34b add test dependencies
fixup ea12daa add test dependencies

# Rebase 5b54f0f..ea12daa onto 5b54f0f (15 commands)
#
# Commands:
# p, pick <commit> = use commit
# r, reword <commit> = use commit, but edit the commit message
# e, edit <commit> = use commit, but stop for amending
# s, squash <commit> = use commit, but meld into previous commit
# f, fixup [-C | -c] <commit> = like "squash" but keep only the previous
#                    commit's log message, unless -C is used, in which case
#                    keep only this commit's message; -c is same as -C but
#                    opens the editor
# x, exec <command> = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with 'git rebase --continue')
# d, drop <commit> = remove commit
# l, label <label> = label current HEAD with a name
# t, reset <label> = reset HEAD to a label
# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
#         create a merge commit using the original merge commit's
#         message (or the oneline, if no original merge commit was
#         specified); use -c <commit> to reword the commit message
# u, update-ref <ref> = track a placeholder for the <ref> to be updated
#                       to this position in the new commits. The <ref> is
#                       updated at the end of the rebase
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
